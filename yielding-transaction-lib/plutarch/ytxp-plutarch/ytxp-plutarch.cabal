
cabal-version: 3.0
name:          ytxp-plutarch
version:       0.1.0.0
synopsis:
  Control scripts, types, and utilities for the YTxP architecture

author:        Peter Dragos
maintainer:    peter@mlabs.city

flag dev
  description: Enable non-strict compilation for development
  manual:      True
  default:     False

-- Peter, 2024-03-01: I'm disabling unused packages because for some
-- reason cabal is telling me that base is unused??
common common-language
  ghc-options:
    -Wall -Wcompat -fprint-explicit-foralls -fprint-explicit-kinds
    -fwarn-missing-import-lists -Weverything -Wno-unsafe
    -Wno-missing-safe-haskell-mode -Wno-implicit-prelude
    -Wno-missing-kind-signatures -Wno-all-missed-specializations
    -Wno-unused-packages

  if !flag(dev)
    ghc-options: -Werror

  default-extensions:
    NoStarIsType
    BangPatterns
    BinaryLiterals
    ConstrainedClassMethods
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    DoAndIfThenElse
    DuplicateRecordFields
    EmptyCase
    EmptyDataDecls
    EmptyDataDeriving
    ExistentialQuantification
    ExplicitForAll
    ExplicitNamespaces
    FlexibleContexts
    FlexibleInstances
    ForeignFunctionInterface
    GADTSyntax
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MonomorphismRestriction
    MultiParamTypeClasses
    NamedFieldPuns
    NamedWildCards
    NumericUnderscores
    OverloadedLabels
    OverloadedStrings
    PartialTypeSignatures
    PatternGuards
    PolyKinds
    PostfixOperators
    RankNTypes
    RecordWildCards
    RelaxedPolyRec
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    TemplateHaskell
    TraditionalRecordSyntax
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    TypeSynonymInstances
    ViewPatterns

  default-language:   Haskell2010
  mixins:
    base hiding (Prelude),
    pprelude (PPrelude as Prelude)

-- Use the plutarch prelude + the base prelude
library pprelude
  default-language: Haskell2010
  build-depends:
    , base
    , plutarch

  exposed-modules:  PPrelude
  hs-source-dirs:   src

library
  import:          common-language
  build-depends:
    , aeson
    , base               >=4.16
    , plutarch
    , plutus-core
    , plutus-ledger-api
    , pprelude
    , text

  hs-source-dirs:  src
  exposed-modules:
    Cardano.YTxP.Control.Parameters
    Cardano.YTxP.Control.ParametersInitial
    Cardano.YTxP.Control.Stubs
    Cardano.YTxP.Control.Utils
    Cardano.YTxP.Control.Vendored
    Cardano.YTxP.Control.Yielding
    Cardano.YTxP.Control.Yielding.MintingPolicy
    Cardano.YTxP.Control.Yielding.StakingValidator
    Cardano.YTxP.Control.Yielding.Validator
    Cardano.YTxP.Control.YieldList
    Cardano.YTxP.Control.YieldList.MintingPolicy
    Cardano.YTxP.Control.YieldList.Validator
